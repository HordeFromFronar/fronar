<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up grid for pathfinding
globalvar grid;
globalvar gridSize;
gridSize = 16;

grid = mp_grid_create(-8,-8,round(room_width/gridSize),round(room_height/gridSize),gridSize,gridSize)
//grid = mp_grid_create(-8,-8,37,19,gridSize,gridSize)

mp_grid_add_instances(grid, obj_wall_inner, false);
mp_grid_add_instances(grid, obj_wall_outer, false);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables

displayRange = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set character destination
xDest = 0;
yDest = 0;

if (global.selected) {
    xDest = mouse_x - (mouse_x % 32) + 16;
    yDest = mouse_y - (mouse_y % 32) + 16;
    global.selected.xDest = xDest;
    global.selected.yDest = yDest;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw firing range

xRange = 0;
yRange = 0;
i = 1;
j = 0;

if (global.selected &amp;&amp; displayRange) {
    xRange = mouse_x - (mouse_x % 32) + 16;
    yRange = mouse_y - (mouse_y % 32) + 16;
    
    xGrid = xRange / 16;
    yGrid = yRange / 16;
    
    if (mp_grid_get_cell(global.grid, xGrid, yGrid) != -1) {
        draw_sprite(spr_grid, 0, xRange, yRange);
        for (i = 1; i &lt; selected.range + 1; i++) {
            offset = i * 32;
            if (lineOfSight(xRange, yRange, xRange + offset, yRange)) {
                draw_sprite(spr_grid, 0, xRange + offset, yRange);
            }
            if (lineOfSight(xRange, yRange, xRange - offset, yRange)) {
                draw_sprite(spr_grid, 0, xRange - offset, yRange);
            }
            if (lineOfSight(xRange, yRange, xRange, yRange + offset)) {
                draw_sprite(spr_grid, 0, xRange, yRange + offset);
            }
            if (lineOfSight(xRange, yRange, xRange, yRange - offset)) {
                draw_sprite(spr_grid, 0, xRange, yRange - offset);
            }
            for (j = selected.range - i; j &gt; 0; j--) {
                offset2 = j * 32;
                if (lineOfSight(xRange, yRange, xRange + offset, yRange + offset2)) {
                    draw_sprite(spr_grid, 0, xRange + offset, yRange + offset2);
                }
                if (lineOfSight(xRange, yRange, xRange + offset, yRange - offset2)) {
                    draw_sprite(spr_grid, 0, xRange + offset, yRange - offset2);
                }
                if (lineOfSight(xRange, yRange, xRange - offset, yRange + offset2)) {
                    draw_sprite(spr_grid, 0, xRange - offset, yRange + offset2);
                }
                if (lineOfSight(xRange, yRange, xRange - offset, yRange - offset2)) {
                    draw_sprite(spr_grid, 0, xRange - offset, yRange - offset2);
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set displayRange

displayRange = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Unset displayRange

displayRange = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
