<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_box32</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//create a dynamic mesh (false)
mesh_id = glr_mesh_create(x, y, false);

//half sprite width
w=sprite_width/2;

//add vertices to make a box
glr_mesh_vertex_add(mesh_id, -w, -w);
glr_mesh_vertex_add(mesh_id, -w, +w);
glr_mesh_vertex_add(mesh_id, +w, +w);
glr_mesh_vertex_add(mesh_id, +w, -w);
glr_mesh_vertex_add(mesh_id, -w, -w);

//finalize the mesh to make it renderable
glr_mesh_update(mesh_id);

image_angle=random(360);

//set the mesh rotation
glr_mesh_set_rotation(mesh_id, image_angle);

//set the mesh shadow strength
glr_mesh_set_shadow_strength(mesh_id, 0.2);

//set the directional shadow length
glr_mesh_set_directional_shadow_length(mesh_id, 0.4);

//set mesh height for directional light (higher mesh casts shadows on lower meshes)
glr_mesh_set_height(mesh_id, 5);

//set directional mask according to the sprite index to avoid shadow overlap
glr_mesh_set_directional_mask(mesh_id, sprite_index, image_index);


image_xscale=0.8+random(1);
image_yscale=image_xscale;

//set the mesh scaling
glr_mesh_set_scaling(mesh_id, image_xscale, image_yscale);


//add ambient occlusion to this instance
glr_occlusion_add_instance(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_angle += delta_time/24000; 

//set mesh rotation  
glr_mesh_set_rotation(mesh_id, image_angle ); 

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
