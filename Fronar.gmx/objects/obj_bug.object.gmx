<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 0.5+random(0.5);
image_yscale = image_xscale;
shadow_id = glr_shadowsprite_create_from_instance(false);  
s = random_range(0.8,2);
im_spd = 0.5*s
glr_shadowsprite_set_layer(shadow_id, 0);
dead = false;
life = 5*image_xscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>glr_shadowsprite_update_instance(shadow_id);  

if(dead) exit;

dir = point_direction(x, y, obj_player.x, obj_player.y);
image_angle = dir;

dt = delta_time/20000
var xmot, ymot;
spd = s * dt;

for (var i = 0; i &lt; 90; i += 5){
    xmot = x + lengthdir_x(spd, dir + i);
    ymot = y + lengthdir_y(spd, dir + i);
    if (!place_meeting(xmot, ymot, par_solid)){
        x = xmot;
        y = ymot; 
        break;
    }
    xmot = x + lengthdir_x(spd, dir - i);
    ymot = y + lengthdir_y(spd, dir - i);
    if (!place_meeting(xmot, ymot,par_solid)){
        x = xmot;
        y = ymot;
        break;
    }
}

var xt, yt;
if(random(10)&gt;8)
with(obj_bug){
    if(!dead)
    if(point_distance(x,y,other.x,other.y)&lt; 16){
        xt = x + sign(x-other.x);   
        yt = y + sign(y-other.y);
        if(!place_meeting(xt,yt,par_solid)){
            x = xt;
            y = yt;
        }
    }
}

if(x-xprevious != 0 &amp;&amp; y-yprevious !=0){
    image_speed = im_spd * dt;
}
else{
    image_speed = 0; 
}


inst = instance_place(x,y,obj_bullet);
if(inst != noone){
    life--;
    effect_create_above(ef_smoke,x,y,0.3, c_red);
    if(life &lt;= 0){
        dead = true;
        sprite_index = spr_enemy_1_dead;
        effect_create_above(ef_smoke,x,y,image_xscale, c_red);
    }
    with(inst) instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>13,13</point>
    <point>14,14</point>
  </PhysicsShapePoints>
</object>
