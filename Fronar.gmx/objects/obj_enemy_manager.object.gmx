<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// INIT timer
// Manages the spawning of enemies. Uses a timer to decide when to spawn.

// Initial delay
alarmTime = room_speed * 10;
alarm[0] = alarmTime;

wave = 0;

// Tweak these for balance:
num_enemies = 5;
last_wave = 10;
num_enemies_last = 7;
wave_frequency = 10; // seconds between waves
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DO SPAWN
// Right now it's room specific, this will need to change if we do procedural gen.

alarm[0] = room_speed * wave_frequency;

++wave;

if (wave == last_wave)
    enemies = num_enemies_last;
else if (wave &lt; last_wave)
    enemies = num_enemies;
else
    enemies = 0;
    
var i;
for (i = 0; i &lt; enemies; ++i) {
    loc = irandom(10); // Random of 2 tends to do something like this 0000011110000111
    
    // Be wary of using switch, even if you do rand(2) and have 2 cases, sometimes
    // neither of those execute. This may be a problem with irandom or the lack of a
    // default case
    
    if loc &lt;= 5 {
        spawn_x = room_width + irandom(50);
        spawn_y = 464 - 200 + irandom(400);
    } else {
        spawn_x = 0 - irandom(50);
        spawn_y = 464 - 200 + irandom(400);
    }
    
    type = irandom(10);
    
    if type &lt;= 5 {
        instance_create(spawn_x, spawn_y, obj_enemy_laser);
    } else {
        instance_create(spawn_x, spawn_y, obj_enemy);
    }    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
